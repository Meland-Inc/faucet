/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTStoreStorage,
  NFTStoreStorageInterface,
} from "../NFTStoreStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "ownerCutPerMillion",
        type: "uint256",
      },
    ],
    name: "ChangedOwnerCutPerMillion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721MelandNFT",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
    ],
    name: "NFTBuyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721MelandNFT",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
    ],
    name: "NFTCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC721MelandNFT",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "NFTDelete",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IERC721MelandNFT",
        name: "nft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "NFTIdPoolUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "GM_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "contract IERC20MELD",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foundationWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721MelandNFT",
        name: "",
        type: "address",
      },
    ],
    name: "itemByNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "tokenIdPool",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellsCount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "limit",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721MelandNFT",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "limitPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "officialWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerCutPerMillion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721MelandNFT",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIdsByNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108b0806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806380b7613c1161006657806380b7613c14610151578063a01f79d414610181578063ac54242d1461019f578063d5391393146101cf578063f72c0d8b146101ed5761009e565b8063088025d3146100a357806330c7be2c146100c1578063451c3d80146100df57806366b61640146100fd5780636b7ae8dc14610133575b600080fd5b6100ab61020b565b6040516100b8919061048b565b60405180910390f35b6100c9610231565b6040516100d691906104bf565b60405180910390f35b6100e7610255565b6040516100f49190610539565b60405180910390f35b61011760048036038101906101129190610597565b610279565b60405161012a97969594939291906106b0565b60405180910390f35b61013b610380565b604051610148919061048b565b60405180910390f35b61016b60048036038101906101669190610752565b6103a6565b6040516101789190610792565b60405180910390f35b6101896103cb565b6040516101969190610792565b60405180910390f35b6101b960048036038101906101b491906107d9565b6103d1565b6040516101c69190610792565b60405180910390f35b6101d7610402565b6040516101e491906104bf565b60405180910390f35b6101f5610426565b60405161020291906104bf565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7ff5eb84615c2a00ecaf817d13794ebd6299c9e01c395bf4018453f13f577f544981565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040160009054906101000a900463ffffffff16908060050180546102fd90610848565b80601f016020809104026020016040519081016040528092919081815260200182805461032990610848565b80156103765780601f1061034b57610100808354040283529160200191610376565b820191906000526020600020905b81548152906001019060200180831161035957829003601f168201915b5050505050905087565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052816000526040600020602052806000526040600020600091509150505481565b60065481565b600460205281600052604060002081815481106103ed57600080fd5b90600052602060002001600091509150505481565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104758261044a565b9050919050565b6104858161046a565b82525050565b60006020820190506104a0600083018461047c565b92915050565b6000819050919050565b6104b9816104a6565b82525050565b60006020820190506104d460008301846104b0565b92915050565b6000819050919050565b60006104ff6104fa6104f58461044a565b6104da565b61044a565b9050919050565b6000610511826104e4565b9050919050565b600061052382610506565b9050919050565b61053381610518565b82525050565b600060208201905061054e600083018461052a565b92915050565b600080fd5b60006105648261046a565b9050919050565b61057481610559565b811461057f57600080fd5b50565b6000813590506105918161056b565b92915050565b6000602082840312156105ad576105ac610554565b5b60006105bb84828501610582565b91505092915050565b6000819050919050565b6105d7816105c4565b82525050565b60008115159050919050565b6105f2816105dd565b82525050565b600063ffffffff82169050919050565b610611816105f8565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610651578082015181840152602081019050610636565b83811115610660576000848401525b50505050565b6000601f19601f8301169050919050565b600061068282610617565b61068c8185610622565b935061069c818560208601610633565b6106a581610666565b840191505092915050565b600060e0820190506106c5600083018a6105ce565b6106d2602083018961047c565b6106df60408301886105e9565b6106ec60608301876105ce565b6106f960808301866105ce565b61070660a0830185610608565b81810360c08301526107188184610677565b905098975050505050505050565b61072f8161046a565b811461073a57600080fd5b50565b60008135905061074c81610726565b92915050565b6000806040838503121561076957610768610554565b5b600061077785828601610582565b92505060206107888582860161073d565b9150509250929050565b60006020820190506107a760008301846105ce565b92915050565b6107b6816105c4565b81146107c157600080fd5b50565b6000813590506107d3816107ad565b92915050565b600080604083850312156107f0576107ef610554565b5b60006107fe85828601610582565b925050602061080f858286016107c4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061086057607f821691505b6020821081141561087457610873610819565b5b5091905056fea264697066735822122050c2aee3e4d7eb56156b2949d953740e8c34024a5fa0a6523aff88ab441290d364736f6c634300080a0033";

export class NFTStoreStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTStoreStorage> {
    return super.deploy(overrides || {}) as Promise<NFTStoreStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTStoreStorage {
    return super.attach(address) as NFTStoreStorage;
  }
  connect(signer: Signer): NFTStoreStorage__factory {
    return super.connect(signer) as NFTStoreStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTStoreStorageInterface {
    return new utils.Interface(_abi) as NFTStoreStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTStoreStorage {
    return new Contract(address, _abi, signerOrProvider) as NFTStoreStorage;
  }
}
