/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LiquidityTrap, LiquidityTrapInterface } from "../LiquidityTrap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TRAP_BLOCKS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bought",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityAddedBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trapAmount",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_trapAmount",
        type: "uint128",
      },
    ],
    name: "setTrapAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityPool",
        type: "address",
      },
    ],
    name: "setLiquidityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f4f806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb146103a2578063bcff895a146103d2578063c4cb3b09146103f0578063dd62ed3e1461040c578063f2fde38b1461043c578063fe0cf254146104585761014d565b806370a08231146102e0578063715018a61461031057806379cc67901461031a5780638da5cb5b1461033657806395d89b4114610354578063a457c2d7146103725761014d565b8063313ce56711610115578063313ce5671461020a578063395093511461022857806342966c681461025857806346022c8a14610274578063665a11ca14610292578063667022fd146102b05761014d565b8063018770201461015257806306fdde031461016e578063095ea7b31461018c57806318160ddd146101bc57806323b872dd146101da575b600080fd5b61016c600480360381019061016791906113cf565b610476565b005b6101766104ba565b6040516101839190611495565b60405180910390f35b6101a660048036038101906101a191906114ed565b61054c565b6040516101b39190611548565b60405180910390f35b6101c461056a565b6040516101d19190611572565b60405180910390f35b6101f460048036038101906101ef919061158d565b610574565b6040516102019190611548565b60405180910390f35b61021261066c565b60405161021f91906115fc565b60405180910390f35b610242600480360381019061023d91906114ed565b610675565b60405161024f9190611548565b60405180910390f35b610272600480360381019061026d9190611617565b610721565b005b61027c610735565b604051610289919061166f565b60405180910390f35b61029a610757565b6040516102a79190611699565b60405180910390f35b6102ca60048036038101906102c591906113cf565b61077d565b6040516102d79190611572565b60405180910390f35b6102fa60048036038101906102f591906113cf565b610795565b6040516103079190611572565b60405180910390f35b6103186107de565b005b610334600480360381019061032f91906114ed565b610866565b005b61033e6108e1565b60405161034b9190611699565b60405180910390f35b61035c61090b565b6040516103699190611495565b60405180910390f35b61038c600480360381019061038791906114ed565b61099d565b6040516103999190611548565b60405180910390f35b6103bc60048036038101906103b791906114ed565b610a88565b6040516103c99190611548565b60405180910390f35b6103da610aa6565b6040516103e79190611572565b60405180910390f35b61040a600480360381019061040591906116e0565b610aac565b005b6104266004803603810190610421919061170d565b610ae8565b6040516104339190611572565b60405180910390f35b610456600480360381019061045191906113cf565b610b6f565b005b610460610c67565b60405161046d91906115fc565b60405180910390f35b8060cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060606880546104c99061177c565b80601f01602080910402602001604051908101604052809291908181526020018280546104f59061177c565b80156105425780601f1061051757610100808354040283529160200191610542565b820191906000526020600020905b81548152906001019060200180831161052557829003601f168201915b5050505050905090565b6000610560610559610c6c565b8484610c74565b6001905092915050565b6000606754905090565b6000610581848484610e3f565b6000606660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006105cc610c6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561064c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064390611820565b60405180910390fd5b61066085610658610c6c565b858403610c74565b60019150509392505050565b60006012905090565b6000610717610682610c6c565b848460666000610690610c6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610712919061186f565b610c74565b6001905092915050565b61073261072c610c6c565b826110c3565b50565b60c960009054906101000a90046fffffffffffffffffffffffffffffffff1681565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60cc6020528060005260406000206000915090505481565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107e6610c6c565b73ffffffffffffffffffffffffffffffffffffffff166108046108e1565b73ffffffffffffffffffffffffffffffffffffffff161461085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085190611911565b60405180910390fd5b610864600061129c565b565b600061087983610874610c6c565b610ae8565b9050818110156108be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b5906119a3565b60405180910390fd5b6108d2836108ca610c6c565b848403610c74565b6108dc83836110c3565b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606069805461091a9061177c565b80601f01602080910402602001604051908101604052809291908181526020018280546109469061177c565b80156109935780601f1061096857610100808354040283529160200191610993565b820191906000526020600020905b81548152906001019060200180831161097657829003601f168201915b5050505050905090565b600080606660006109ac610c6c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610a69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6090611a35565b60405180910390fd5b610a7d610a74610c6c565b85858403610c74565b600191505092915050565b6000610a9c610a95610c6c565b8484610e3f565b6001905092915050565b60ca5481565b8060c960006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b77610c6c565b73ffffffffffffffffffffffffffffffffffffffff16610b956108e1565b73ffffffffffffffffffffffffffffffffffffffff1614610beb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be290611911565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5290611ac7565b60405180910390fd5b610c648161129c565b50565b600481565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdb90611b59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4b90611beb565b60405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610e329190611572565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610eaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea690611c7d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1690611d0f565b60405180910390fd5b610f2a838383611362565b6000606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610fb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa890611da1565b60405180910390fd5b818103606560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611046919061186f565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110aa9190611572565b60405180910390a36110bd848484611367565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112a90611e33565b60405180910390fd5b61113f82600083611362565b6000606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156111c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bd90611ec5565b60405180910390fd5b818103606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816067600082825461121e9190611ee5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112839190611572565b60405180910390a361129783600084611367565b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139c82611371565b9050919050565b6113ac81611391565b81146113b757600080fd5b50565b6000813590506113c9816113a3565b92915050565b6000602082840312156113e5576113e461136c565b5b60006113f3848285016113ba565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561143657808201518184015260208101905061141b565b83811115611445576000848401525b50505050565b6000601f19601f8301169050919050565b6000611467826113fc565b6114718185611407565b9350611481818560208601611418565b61148a8161144b565b840191505092915050565b600060208201905081810360008301526114af818461145c565b905092915050565b6000819050919050565b6114ca816114b7565b81146114d557600080fd5b50565b6000813590506114e7816114c1565b92915050565b600080604083850312156115045761150361136c565b5b6000611512858286016113ba565b9250506020611523858286016114d8565b9150509250929050565b60008115159050919050565b6115428161152d565b82525050565b600060208201905061155d6000830184611539565b92915050565b61156c816114b7565b82525050565b60006020820190506115876000830184611563565b92915050565b6000806000606084860312156115a6576115a561136c565b5b60006115b4868287016113ba565b93505060206115c5868287016113ba565b92505060406115d6868287016114d8565b9150509250925092565b600060ff82169050919050565b6115f6816115e0565b82525050565b600060208201905061161160008301846115ed565b92915050565b60006020828403121561162d5761162c61136c565b5b600061163b848285016114d8565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61166981611644565b82525050565b60006020820190506116846000830184611660565b92915050565b61169381611391565b82525050565b60006020820190506116ae600083018461168a565b92915050565b6116bd81611644565b81146116c857600080fd5b50565b6000813590506116da816116b4565b92915050565b6000602082840312156116f6576116f561136c565b5b6000611704848285016116cb565b91505092915050565b600080604083850312156117245761172361136c565b5b6000611732858286016113ba565b9250506020611743858286016113ba565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061179457607f821691505b602082108114156117a8576117a761174d565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b600061180a602883611407565b9150611815826117ae565b604082019050919050565b60006020820190508181036000830152611839816117fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061187a826114b7565b9150611885836114b7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118ba576118b9611840565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006118fb602083611407565b9150611906826118c5565b602082019050919050565b6000602082019050818103600083015261192a816118ee565b9050919050565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b600061198d602483611407565b915061199882611931565b604082019050919050565b600060208201905081810360008301526119bc81611980565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611a1f602583611407565b9150611a2a826119c3565b604082019050919050565b60006020820190508181036000830152611a4e81611a12565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ab1602683611407565b9150611abc82611a55565b604082019050919050565b60006020820190508181036000830152611ae081611aa4565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611b43602483611407565b9150611b4e82611ae7565b604082019050919050565b60006020820190508181036000830152611b7281611b36565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bd5602283611407565b9150611be082611b79565b604082019050919050565b60006020820190508181036000830152611c0481611bc8565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611c67602583611407565b9150611c7282611c0b565b604082019050919050565b60006020820190508181036000830152611c9681611c5a565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611cf9602383611407565b9150611d0482611c9d565b604082019050919050565b60006020820190508181036000830152611d2881611cec565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611d8b602683611407565b9150611d9682611d2f565b604082019050919050565b60006020820190508181036000830152611dba81611d7e565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e1d602183611407565b9150611e2882611dc1565b604082019050919050565b60006020820190508181036000830152611e4c81611e10565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611eaf602283611407565b9150611eba82611e53565b604082019050919050565b60006020820190508181036000830152611ede81611ea2565b9050919050565b6000611ef0826114b7565b9150611efb836114b7565b925082821015611f0e57611f0d611840565b5b82820390509291505056fea2646970667358221220222d6cda560c270a50fb76b056c1299704c150d3b752eebff198be43436c3bce64736f6c634300080a0033";

export class LiquidityTrap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityTrap> {
    return super.deploy(overrides || {}) as Promise<LiquidityTrap>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityTrap {
    return super.attach(address) as LiquidityTrap;
  }
  connect(signer: Signer): LiquidityTrap__factory {
    return super.connect(signer) as LiquidityTrap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityTrapInterface {
    return new utils.Interface(_abi) as LiquidityTrapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityTrap {
    return new Contract(address, _abi, signerOrProvider) as LiquidityTrap;
  }
}
